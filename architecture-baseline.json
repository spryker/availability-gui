[
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Communication/Form/AvailabilityStockForm.php",
        "description": "Method `Spryker\\Zed\\AvailabilityGui\\Communication\\Form\\AvailabilityStockForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Communication/Form/StockSubForm.php",
        "description": "Method `Spryker\\Zed\\AvailabilityGui\\Communication\\Form\\StockSubForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToLocaleBridge.php",
        "description": "Bridges: Method `getCurrentLocale()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToOmsFacadeBridge.php",
        "description": "Bridges: Method `getReservationsFromOtherStores()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `createStockProduct()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `updateStockProduct()` must have `public function update<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Type should be defined for param `idProductConcrete` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\Facade\\AvailabilityGuiToStockBridge::findStockProductsByIdProductForStore()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `findStockProductsByIdProductForStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `getWarehouseToStoreMapping()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `getStoreToWarehouseMapping()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `getStockTypesForStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToStockBridge.php",
        "description": "Bridges: Method `getAvailableWarehousesForStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Method `getAllStores()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Method `getCurrentStore()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `idStore` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\Facade\\AvailabilityToStoreFacadeBridge::getStoreById()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Method `getStoreById()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `storeName` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\Facade\\AvailabilityToStoreFacadeBridge::getStoreByName()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Method `getStoreByName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityToStoreFacadeBridge.php",
        "description": "Bridges: Method `getStoresWithSharedPersistence()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idLocale` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityAbstractWithStockByIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idStore` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityAbstractWithStockByIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityWithStockByIdProductAbstractAndIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idLocale` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityWithStockByIdProductAbstractAndIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idStore` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityWithStockByIdProductAbstractAndIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idProductAbstract` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityAbstractWithStockByIdProductAbstractAndIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idLocale` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityAbstractWithStockByIdProductAbstractAndIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToAvailabilityQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idStore` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToAvailabilityQueryContainerBridge::queryAvailabilityAbstractWithStockByIdProductAbstractAndIdLocale()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/QueryContainer/AvailabilityGuiToProductBundleQueryContainerBridge.php",
        "description": "Bridges: Type should be defined for param `idProductConcrete` in method `Spryker\\Zed\\AvailabilityGui\\Dependency\\QueryContainer\\AvailabilityGuiToProductBundleQueryContainerBridge::queryBundleProduct()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/AvailabilityGui/Dependency/Facade/AvailabilityGuiToLocaleBridge.php",
        "description": "Bridges: Method `getCurrentLocaleName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
